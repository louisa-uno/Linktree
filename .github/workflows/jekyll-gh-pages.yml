# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
    # Runs on pushes targeting the default branch
    push:
        branches: ["main"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    # Build job
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Pages
              uses: actions/configure-pages@v5
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.x"
            - name: Install Python dependencies
              run: pip install requests beautifulsoup4
            - name: Run Python script
              run: python src/updateSubscribers.py
            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18  
            - name: Install PurgeCSS
              run: npm install -g purgecss cssnano-cli html-minifier-terser terser esbuild
            - name: Download FontAwesome
              run: |
                curl -o fontawesome.css https://use.fontawesome.com/releases/v5.15.4/css/all.css
                mkdir webfonts
                curl -o webfonts/fa-brands-400.woff2 https://use.fontawesome.com/releases/v5.15.4/webfonts/fa-brands-400.woff2
                curl -o webfonts/fa-brands-400.woff https://use.fontawesome.com/releases/v5.15.4/webfonts/fa-brands-400.woff
                curl -o webfonts/fa-brands-400.ttf https://use.fontawesome.com/releases/v5.15.4/webfonts/fa-brands-400.ttf
                curl -o webfonts/fa-solid-900.woff2 https://use.fontawesome.com/releases/v5.15.4/webfonts/fa-solid-900.woff2
                curl -o webfonts/fa-solid-900.woff https://use.fontawesome.com/releases/v5.15.4/webfonts/fa-solid-900.woff
                curl -o webfonts/fa-solid-900.ttf https://use.fontawesome.com/releases/v5.15.4/webfonts/fa-solid-900.ttf
            - name: Download Signika Google Font (https://fonts.googleapis.com/css2?family=Signika:wght@600&display=swap)
              run: |
                curl -o SignikaGoogleFont.ttf https://fonts.gstatic.com/s/signika/v25/vEF72_JTCgwQ5ejvMV0Ox_Kg1UwJ0tKfX4zNpD8E4ASzH1r9XzyYzQ.ttf
            - name: Download codecorner
              run: |
                curl -o src/codecorner.js https://cdn.pride.codes/js/codecorner.js
            - name: Concatenate JavaScript files
              run: |
                npx esbuild src/index.js --bundle --outfile=bundle.js
            - name: Run PurgeCSS
              run: |
                mkdir -p purged-css
                purgecss --content "./**/*.html" --css "./**/*.css" --output "./purged-css"
                mv ./purged-css/*.css ./  # Move purged CSS back to root
            - name: Minify CSS
              run: |
                mkdir -p minified-css
                for file in ./*.css; do
                  [ -f "$file" ] && cssnano "$file" "minified-css/$(basename $file)"
                done
                mv minified-css/*.css ./  # Replace original CSS with minified version
            - name: Minify HTML
              run: |
                mkdir -p minified-html
                for file in ./*.html; do
                  [ -f "$file" ] && html-minifier-terser --collapse-whitespace --remove-comments --remove-redundant-attributes --minify-css true --minify-js true --input-dir ./ --output-dir minified-html --file-ext html
                done
                mv minified-html/*.html ./  # Replace original HTML with minified version
            - name: Minify JavaScript
              run: |
                mkdir -p minified-js
                for file in ./*.js; do
                  [ -f "$file" ] && terser "$file" -o "minified-js/$(basename $file)" --compress --mangle
                done
                mv minified-js/*.js ./  # Replace original JS with minified version
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                path: .

    # Deployment job
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
